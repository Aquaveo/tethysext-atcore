stages:
  - Lint
  - Build
  - Test
  - Cleanup


include:
  - project: 'tethys/kubernetes/gl-k8s-integration'
    ref: 1.0.1
    file: '/kaniko-build.yml'


variables:
  CONDA_HOME: '/opt/conda'

Lint:
  image: python:3.7
  stage: Lint
  script:
    - pip install flake8
    - flake8 .

.kaniko_prep: &kaniko_prep
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json

### Build ###
"Build Commit":
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

"Build Tag":
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    
### Test ###
Test:
  stage: Test
  image: docker:git
  script:
    # Import build
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/dev:$CI_COMMIT_SHORT_SHA
    # Run dependencies
    - docker run -d --name tethys_postgis -p 5432:5432 -e POSTGRES_PASSWORD='pass' mdillon/postgis
    - echo "wait for container to start up..."
    - sleep 120s
    - docker logs tethys_postgis
    # Create Test Database
    - docker exec tethys_postgis /bin/bash -c "export PGPASSWORD='pass'; createdb -U postgres -p 5432 -h 172.17.0.1 --no-password --owner postgres atcore_tests"
    # Run
    - >
        docker run -d --name tethys_atcore
        -e TETHYS_PUBLIC_HOST='172.17.0.1'
        -e TETHYS_DB_USERNAME='postgres'
        -e TETHYS_DB_PASSWORD='pass'
        -e TETHYS_DB_HOST='172.17.0.1'
        -e TETHYS_DB_PORT='5432'
        $CI_REGISTRY_IMAGE/dev:$CI_COMMIT_SHORT_SHA
    - echo "wait for container to start up..."
    - sleep 300s
    - docker logs tethys_atcore
    - echo "Settings:"
    - docker exec tethys_atcore /bin/bash -c ". $CONDA_HOME/bin/activate tethys && cd /usr/lib/tethys/tethys/tethys_portal && cat settings.py"
    - echo "Python Environment:"
    - docker exec tethys_atcore /bin/bash -c ". $CONDA_HOME/bin/activate tethys; conda list"
    - docker exec tethys_atcore /bin/bash -c ". $CONDA_HOME/bin/activate tethys; pip list"
    # Reinstall Extension Using Develop to Run Tests
    - docker exec tethys_atcore /bin/bash -c ". $CONDA_HOME/bin/activate tethys && cd /var/www/tethys/exts/tethysext-atcore && pip uninstall -y tethysext-atcore && python setup.py develop"
    # Unit Tests
    - docker exec tethys_atcore /bin/bash -c ". $CONDA_HOME/bin/activate tethys && cd /var/www/tethys/exts/tethysext-atcore && ATCORE_TEST_DATABASE='postgresql://postgres:pass@172.17.0.1:5432/atcore_tests' coverage run --rcfile=/var/www/tethys/exts/tethysext-atcore/ci-coverage.ini -m unittest -v tethysext.atcore.tests.unit_tests"
    # Intermediate Tests
    - docker exec tethys_atcore /bin/bash -c ". $CONDA_HOME/bin/activate tethys && cd /usr/lib/tethys/tethys/tethys_portal && ATCORE_TEST_DATABASE='postgresql://postgres:pass@172.17.0.1:5432/atcore_tests' coverage run -a --rcfile=/var/www/tethys/exts/tethysext-atcore/ci-coverage.ini manage.py test -v 2 tethysext.atcore.tests.integrated_tests"
    # Coverage Report
    - docker exec tethys_atcore /bin/bash -c ". $CONDA_HOME/bin/activate tethys && cd /var/www/tethys/exts/tethysext-atcore && coverage report --rcfile=/var/www/tethys/exts/tethysext-atcore/ci-coverage.ini"
  before_script:
    - docker rm -f tethys_atcore tethys_postgis || true
  after_script:
    - docker rm -f tethys_atcore tethys_postgis || true
  tags:
    - docker
  except:
    - tags

"Salt Test":
  stage: Test
  image: docker:git
  script:
    # Import build
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/dev:$CI_COMMIT_SHORT_SHA
    # Run dependencies
    - docker run -d --name tethys_postgis -p 5432:5432 -e POSTGRES_PASSWORD='pass' mdillon/postgis
    - echo "wait for container to start up..."
    - docker logs tethys_postgis
    - sleep 60s
    # Get latest atcore Image
    - if [ -z "$CI_COMMIT_TAG" ]; then export LATEST_TAG="dev"; else export LATEST_TAG="latest"; fi
    # Run test script
    - >
        docker run --name tethys_atcore
        -e TETHYS_PUBLIC_HOST='172.17.0.1'
        -e TETHYS_DB_USERNAME='postgres'
        -e TETHYS_DB_PASSWORD='pass'
        -e TETHYS_DB_HOST='172.17.0.1'
        -e TETHYS_DB_PORT='5432'
        $CI_REGISTRY_IMAGE/dev:$CI_COMMIT_SHORT_SHA
        bash test-docker.sh
  before_script:
    - docker rm -f tethys_atcore tethys_postgis || true
  after_script:
    - docker rm -f tethys_atcore tethys_postgis || true
  tags:
    - docker
  except:
    - tags
