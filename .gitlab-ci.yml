image: docker:git

stages:
  - Lint
  - Build
  - Test

variables:
  CONDA_HOME: '/opt/conda'

Lint:
  image: python:3.6
  stage: Lint
  script:
    - pip install flake8
    - flake8 .

.kaniko_prep: &kaniko_prep
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json

Build:
  stage: Build
  <<: *kaniko_prep
  artifacts:
    paths:
      - $CI_PROJECT_DIR/${CI_PROJECT_PATH_SLUG}.tar
    expire_in: 1 hour
  script:
    - /kaniko/executor 
        --context $CI_PROJECT_DIR
        --dockerfile $CI_PROJECT_DIR/Dockerfile 
        --destination $CI_REGISTRY_IMAGE/atcore:${CI_COMMIT_REF_SLUG}-dev
        --tarPath $CI_PROJECT_DIR/${CI_PROJECT_PATH_SLUG}.tar
        --cache true
        --cache-repo $CI_REGISTRY_IMAGE/cache
  except:
    - tags

"Build and Push":
  stage: Build
  <<: *kaniko_prep
  script:
    - /kaniko/executor 
        --context $CI_PROJECT_DIR
        --dockerfile $CI_PROJECT_DIR/Dockerfile 
        --destination $CI_REGISTRY_IMAGE/atcore:$CI_COMMIT_TAG
        --destination $CI_REGISTRY_IMAGE/atcore:latest
        --cache true
        --cache-repo $CI_REGISTRY_IMAGE/cache
  only:
    - tags

Test:
  stage: Test
  script:
    # Import build
    - docker load -i ${CI_PROJECT_PATH_SLUG}.tar
    # Setup
    - docker rm -f tethys_atcore tethys_postgis || true
    # Run dependencies
    - docker run -d --name tethys_postgis -p 5432:5432 -e POSTGRES_PASSWORD='pass' mdillon/postgis
    - echo "wait for container to start up..."
    - sleep 60s
    - docker logs tethys_postgis
    # Create Test Database
    - docker exec tethys_postgis /bin/bash -c "export PGPASSWORD='pass'; createdb -U postgres -p 5432 -h 172.17.0.1 --no-password --owner postgres atcore_tests"
    # Run
    - >
        docker run -d --name tethys_atcore  
        -e ALLOWED_HOSTS="\"['localhost', '127.0.0.1']\"" 
        -e TETHYS_PUBLIC_HOST='172.17.0.1' 
        -e TETHYS_DB_USERNAME='postgres' 
        -e TETHYS_DB_PASSWORD='pass' 
        -e TETHYS_DB_HOST='172.17.0.1' 
        -e TETHYS_DB_PORT='5432'
        $CI_REGISTRY_IMAGE/atcore:${CI_COMMIT_REF_SLUG}-dev
    - echo "wait for container to start up..."
    - sleep 300s
    - docker logs tethys_atcore
    - echo "Settings:"
    - docker exec tethys_atcore /bin/bash -c ". $CONDA_HOME/bin/activate tethys && cd /usr/lib/tethys/src/tethys_portal && cat settings.py"
    - echo "Python Environment:"
    - docker exec tethys_atcore /bin/bash -c ". $CONDA_HOME/bin/activate tethys; conda list"
    - docker exec tethys_atcore /bin/bash -c ". $CONDA_HOME/bin/activate tethys; pip list"
    # Clean coverage data
    - docker exec tethys_atcore /bin/bash -c ". $CONDA_HOME/bin/activate tethys && cd /var/www/tethys/exts/tethysext-atcore && rm -f .coverage || true"
    # Unit Tests
    - docker exec tethys_atcore /bin/bash -c ". $CONDA_HOME/bin/activate tethys && cd /var/www/tethys/exts/tethysext-atcore && ATCORE_TEST_DATABASE='postgresql://postgres:pass@172.17.0.1:5432/atcore_tests' coverage run --rcfile=/var/www/tethys/exts/tethysext-atcore/ci-coverage.ini -m unittest -v tethysext.atcore.tests.unit_tests"
    # Intermediate Tests
    - docker exec tethys_atcore /bin/bash -c ". $CONDA_HOME/bin/activate tethys && cd /usr/lib/tethys/src/ && ATCORE_TEST_DATABASE='postgresql://postgres:pass@172.17.0.1:5432/atcore_tests' coverage run -a --rcfile=/var/www/tethys/exts/tethysext-atcore/ci-coverage.ini manage.py test -v 2 tethysext.atcore.tests.integrated_tests"
    # Coverage Report
    - docker exec tethys_atcore /bin/bash -c ". $CONDA_HOME/bin/activate tethys && cd /var/www/tethys/exts/tethysext-atcore && coverage report --rcfile=/var/www/tethys/exts/tethysext-atcore/ci-coverage.ini"
    # Clean up
    - docker rm -f tethys_atcore tethys_postgis || true
  tags:
    - docker
  except:
    - tags

"Salt Test":
  stage: Test
  script:
    # Import build
    - docker load -i ${CI_PROJECT_PATH_SLUG}.tar
    # Setup
    - docker rm -f tethys_atcore tethys_postgis || true
    # Run dependencies
    - docker run -d --name tethys_postgis -p 5432:5432 -e POSTGRES_PASSWORD='pass' mdillon/postgis
    - echo "wait for container to start up..."
    - docker logs tethys_postgis
    - sleep 60s
    # Get latest atcore Image
    - if [ -z "$CI_COMMIT_TAG" ]; then export LATEST_TAG="dev"; else export LATEST_TAG="latest"; fi
    # Run test script
    - >
        docker run --name tethys_atcore 
        -e ALLOWED_HOSTS="\"['localhost', '127.0.0.1']\"" 
        -e TETHYS_PUBLIC_HOST='172.17.0.1' 
        -e TETHYS_DB_USERNAME='postgres' 
        -e TETHYS_DB_PASSWORD='pass' 
        -e TETHYS_DB_HOST='172.17.0.1' 
        -e TETHYS_DB_PORT='5432' 
        $CI_REGISTRY_IMAGE/atcore:${CI_COMMIT_REF_SLUG}-dev
        bash test-docker.sh
    # Clean up
    - docker rm -f tethys_atcore tethys_postgis || true
  tags:
    - docker
  except:
    - tags