image: docker:git

stages:
  - test
  - build
  - test_image

variables:
  TETHYS_CORE_TAG: 'v3.0.0b-r2'

lint:
  image: python:3.6
  stage: test
  script:
    - pip install flake8
    - flake8 .

tests:
  stage: test
  script:
    # Setup
    - docker rm -f tethys_atcore tethys_postgis || true
    - docker pull ciwater/postgis
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY/tethys/aqua-tethys/tethyscore:$TETHYS_CORE_TAG
    # Run dependencies
    - docker run -d --name tethys_postgis -p 5435:5432 -e TETHYS_DEFAULT_PASS='pass' -e TETHYS_SUPER_PASS='pass' ciwater/postgis
    - echo "wait for container to start up..."
    - sleep 15s
    # Create Test Database
    - docker exec tethys_postgis /bin/bash -c "export PGPASSWORD='pass'; createdb -U tethys_super -p 5435 -h 172.17.0.1 -E SQL_ASCII --no-password --owner tethys_super atcore_tests"
    # Build
    - docker build -t tethys_atcore .
    # Run Tethys Container
    - docker run -d --name tethys_atcore  -e ALLOWED_HOSTS="\"['localhost', '127.0.0.1']\"" -e TETHYS_PUBLIC_HOST='172.17.0.1' -e TETHYS_DB_USERNAME='tethys_super' -e TETHYS_DB_PASSWORD='pass' -e TETHYS_DB_HOST='172.17.0.1' -e TETHYS_DB_PORT='5435' tethys_atcore
    - echo "wait for container to start up..."
    - sleep 60s
    - docker logs tethys_atcore
    - echo "Settings"
    - docker exec tethys_atcore /bin/bash -c ". /usr/lib/tethys/miniconda/bin/activate tethys && cd /usr/lib/tethys/src/tethys_portal && cat settings.py"
    # Clean coverage data
    - docker exec tethys_atcore /bin/bash -c ". /usr/lib/tethys/miniconda/bin/activate tethys && cd /var/www/tethys/exts/tethysext-atcore && rm -f .coverage || true"
    - docker exec tethys_atcore /bin/bash -c "ls -al /var/www/tethys/exts/tethysext-atcore"
    # Unit Tests
    - docker exec tethys_atcore /bin/bash -c ". /usr/lib/tethys/miniconda/bin/activate tethys && cd /var/www/tethys/exts/tethysext-atcore && coverage run --rcfile=coverage.ini -m unittest -v tethysext.atcore.tests.unit_tests"
    - docker exec tethys_atcore /bin/bash -c "ls -al /var/www/tethys/exts/tethysext-atcore &&"
    - docker exec tethys_atcore /bin/bash -c ". /usr/lib/tethys/miniconda/bin/activate tethys && cd /var/www/tethys/exts/tethysext-atcore && coverage report -m --rcfile=coverage.ini"
    # Intermediate Tests
    - docker exec tethys_atcore /bin/bash -c ". /usr/lib/tethys/miniconda/bin/activate tethys && cd /var/www/tethys/exts/tethysext-atcore && coverage run -a --rcfile=coverage.ini /usr/lib/tethys/src/manage.py test -v 2 tethysext.atcore.tests.integrated_tests"
    # Coverage Report
    - docker exec tethys_atcore /bin/bash -c "ls -al /var/www/tethys/exts/tethysext-atcore"
    - docker exec tethys_atcore /bin/bash -c ". /usr/lib/tethys/miniconda/bin/activate tethys && cd /var/www/tethys/exts/tethysext-atcore && coverage report -m --rcfile=coverage.ini"
    # Clean up
    - docker rm -f tethys_atcore tethys_postgis || true
  tags:
    - docker

build:
  stage: build
  script:
    - if [ -z "$CI_COMMIT_TAG" ]; then export LATEST_TAG="dev"; else export LATEST_TAG="latest"; fi
    - docker build --squash -t $CI_REGISTRY_IMAGE/atcore:$CI_COMMIT_REF_NAME -t $CI_REGISTRY_IMAGE/atcore:$LATEST_TAG .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/atcore:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE/atcore:$LATEST_TAG
  tags:
    - docker
  only:
    - tags
    - branches

test_image:
  stage: test_image
  script:
    - docker rm -f tethys_atcore tethys_postgis || true
    - docker pull ciwater/postgis
    # Run dependencies
    - docker run -d --name tethys_postgis -p 5435:5432 -e TETHYS_DEFAULT_PASS='pass' -e TETHYS_SUPER_PASS='pass' ciwater/postgis
    - echo "wait for container to start up..."
    - sleep 15s
    # Get latest atcore Image
    - if [ -z "$CI_COMMIT_TAG" ]; then export LATEST_TAG="dev"; else export LATEST_TAG="latest"; fi
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/atcore:$LATEST_TAG
    # Run test script
    - docker run --name tethys_atcore -e ALLOWED_HOSTS="\"['localhost', '127.0.0.1']\"" -e TETHYS_PUBLIC_HOST='172.17.0.1' -e TETHYS_DB_USERNAME='tethys_super' -e TETHYS_DB_PASSWORD='pass' -e TETHYS_DB_HOST='172.17.0.1' -e TETHYS_DB_PORT='5435' $CI_REGISTRY_IMAGE/atcore:$LATEST_TAG bash test-docker.sh
    # Clean up
    - docker rm -f tethys_atcore tethys_postgis || true
  tags:
    - docker